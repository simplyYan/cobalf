class Cobalf{constructor(){this.initLazyLoadingAndSkeletonScreen(),this.toolboxActivated=!1,this.requestIds=[],this.localStorageKey="cobalfEncryptionKey"}static New(){return new Cobalf}initLazyLoadingAndSkeletonScreen(){window.addEventListener("load",(()=>{const t=performance.getEntriesByType("navigation")[0];t.domContentLoadedEventEnd-t.startTime>2e3&&this.enableLazyLoading()}))}enableLazyLoading(){document.querySelectorAll("img[data-src]").forEach((t=>{t.setAttribute("src",t.getAttribute("data-src")),t.onload=function(){t.removeAttribute("data-src")}}))}enableSkeletonScreen(){document.querySelectorAll(".skeleton").forEach((t=>{t.classList.add("loaded")}))}RequestMade(t){return this.requestIds.includes(t)}Select(t,e){const r=t.match(/::(.*?)::/g);return r&&r.length>=e?r[e-1].replace(/::/g,"").trim():null}Replace(t,e,r){const n=t.innerHTML.match(/::(.*?)::/g);t.innerHTML=t.innerHTML.replace(n[e-1],r)}InputValue(t){return t.value}Clipboard(t){navigator.clipboard.writeText(t)}SetAttribute(t,e,r){this.Id(t).setAttribute(e,r)}Id(t){return document.getElementById(t)}Toolbox(){this.toolboxActivated=!0,this.currentDate=new Date,this.lastModified=document.lastModified}LocalKey(t){return`${t}_${Math.random().toString(36).substr(2,9)}`}LocalStorage(t,e){const r=this.encrypt(t,e);localStorage.setItem(e,r)}CSS(t){const e=document.createElement("style");e.innerHTML=t,document.head.appendChild(e)}GetStorage(t){const e=localStorage.getItem(t);return this.decrypt(e,t)}encrypt(t,e){return btoa(t+e)}decrypt(t,e){return atob(t).replace(e,"")}HTML(t){const e=this.sanitizeHTML(t);document.body.insertAdjacentHTML("beforeend",e)}sanitizeHTML(t){const e=document.createElement("div");return e.innerHTML=t,e.textContent}Request(t,e,r){const n=new XMLHttpRequest;n.open(t.type,t.url,!0),n.setRequestHeader("Content-Type","application/json"),n.onload=function(){n.status>=200&&n.status<300?e(n.responseText):r(n.statusText)},n.onerror=function(){r(n.statusText)},n.send(JSON.stringify(t.data))}createElement(t,e,...r){return{type:t,props:e,children:r}}render(t,e){if("string"==typeof t){const r=document.createTextNode(t);return e.appendChild(r)}const r=document.createElement(t.type);for(let e in t.props)r.setAttribute(e,t.props[e]);return t.children.forEach((t=>this.render(t,r))),e.appendChild(r)}createComponent(t){return function(e){const r=new t(e);return this.createElement(r.render())}}mountComponent(t,e){const r=this.createComponent(t);this.render(r,e)}reactive(t){return new Proxy(t,{set:(t,e,r)=>(t[e]=r,!0)})}state={};setState(t){this.state={...this.state,...t},this.render()}routes={};route(t,e){this.routes[t]=e}navigate(t){window.history.pushState({},t,window.location.origin+t),this.render()}render(){const t=window.location.pathname,e=this.routes[t];document.body.innerHTML="",e&&this.mountComponent(e,document.body)}}class Mobalf{constructor(t){this.el="string"==typeof t?document.querySelector(t):t,this.transforms=[],this.durationVal="2s"}transform(t){return this.transforms.push(t),this}translate(t,e=0){return this.transform(`translate(${t}px, ${e}px)`)}rotate(t){return this.transform(`rotate(${t}deg)`)}scale(t,e=t){return this.transform(`scale(${t}, ${e})`)}set(t,e){return this.el.style[t]=e,this}duration(t){return this.durationVal="string"==typeof t?t:`${t}ms`,this}end(t){return this.el.style.transitionDuration=this.durationVal,this.transforms.length&&(this.el.style.transform=this.transforms.join(" ")),t&&setTimeout(t,1e3*parseFloat(this.durationVal)),this}Timeout(t){if(!t||!t.Order||!t.Interval)return void console.error("Parâmetros inválidos. Por favor, forneça um objeto com propriedades 'Order' e 'Interval'.");const e=t.Order.split(",").map((t=>t.trim())),r=t.Interval;e.forEach(((t,e)=>{setTimeout((()=>{"function"==typeof window[t]?window[t]():console.error(`Função ${t} não está definida.`)}),e*r)}))}ATimeout(t){if(!t||!t.Order||!t.Interval)return void console.error("Invalid parameters. Please provide an object with 'Order' and 'Interval' properties.");const e=t.Order.split(",").map((t=>t.trim())),r=Array.isArray(t.Interval)?t.Interval:[t.Interval];e.length===r.length?e.forEach(((t,e)=>{setTimeout((()=>{"function"==typeof window[t]?window[t]():console.error(`Function ${t} is not defined.`)}),r[e])})):console.error("The number of functions does not match the number of intervals provided.")}}window.onpopstate=()=>{cobalf.render()};
